{"version":3,"sources":["webpack:///./src/components/Content/styled.js","webpack:///./src/components/Content/index.js","webpack:///./src/components/GridTemplate/styled.js","webpack:///./src/components/GridTemplate/index.js","webpack:///./src/pages/404.ar.js"],"names":["Content","styled","article","withConfig","displayName","componentId","T","V","md","lg","default","sm","xxs","media","lessThan","_templateObject","_taggedTemplateLiteralLoose","box","_ref","children","React","createElement","S","GridTemplate","section","NotFoundPage","Layout","className","role","aria-label","AniLink","cover","bg","getActiveTheme","direction","duration","to","onClick","ReactGA","event","category","action","label"],"mappings":"oLAMO,MAAMA,EAAUC,IAAOC,QAAOC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAdJ,CAAc,45CACjCK,IAGcC,IAAQC,GAILD,IAAQC,GAIvBF,IAGcC,IAAQE,GAILF,IAAQG,QAKzBJ,IAGcC,IAAQE,GAILF,IAAQG,QAKzBJ,IAGcC,IAAQC,GAILD,IAAQI,GAMRJ,IAAQG,QAKzBJ,IAIAA,IACaC,IAAQK,IAGJL,IAAQI,GACXJ,IAAQG,QACRH,IAAQI,GAGRJ,IAAQE,GAILF,IAAQE,GAgBRF,IAAQG,QAMRH,IAAQI,GAeVJ,IAAQK,IAEPL,IAAQG,QAEtBG,IAAMC,SAAS,SAAfD,CAAwBE,MAAAC,YAAA,+HAGRT,IAAQI,GACPJ,IAAQI,IAKVJ,IAAQG,QAmBVH,IAAQG,QACXH,IAAQG,QAIpBJ,IAGEA,IACeC,IAASU,IAETV,IAAQI,GACPJ,IAAQI,GAIxBL,IAUFA,KC7JSN,IAVCkB,IAAmB,IAAlB,SAAEC,GAAUD,EAC3B,OACEE,IAAAC,cAACC,EAAS,KAAGH,K,6DCLV,MAAMI,E,UAAetB,EAAOuB,QAAOrB,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAdJ,CAAc,yDCe3BsB,IAZML,IAAmB,IAAlB,SAAEC,GAAUD,EAChC,OACEE,IAAAC,cAACC,EAAc,KACZH,K,oCCRP,iHAgEeM,UA9CMA,IAEjBL,IAAAC,cAACK,IAAM,KACLN,IAAAC,cAACE,IAAY,KACXH,IAAAC,cAACrB,IAAO,KACNoB,IAAAC,cAAA,UAAI,0BAEFD,IAAAC,cAAA,QAAMM,UAAU,QAAQC,KAAK,MAAMC,aAAW,gBAAe,OAK/DT,IAAAC,cAAA,KAAGM,UAAU,iBAAgB,mBAE3BP,IAAAC,cAAA,QAAMM,UAAU,QAAQC,KAAK,MAAMC,aAAW,eAAc,OAK9DT,IAAAC,cAAA,SAAG,4CACyC,IAC1CD,IAAAC,cAACS,IAAO,CACNC,OAAK,EACLC,GAAIC,cACJC,UAAU,OACVC,SAAU,EACVC,GAAG,aACHC,QAASA,KAlCrBC,IAAQC,MAAM,CACZC,SAAU,MACVC,OAAQ,QACRC,MAAM,2BAgCG,qBAES,IACR,IACFtB,IAAAC,cAAA,QACEM,UAAU,QACVC,KAAK,MACLC,aAAW,yBACZ","file":"component---src-pages-404-ar-js-6218a09f21b78c339c47.js","sourcesContent":["import styled from 'styled-components'\nimport media from 'styled-media-query'\n\nimport * as V from 'styles/variables'\nimport * as T from 'styles/typography'\n\nexport const Content = styled.article`\n  ${T.Text1}\n\n  &:not(:first-child) {\n    margin-top: ${V.Space.md};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: ${V.Space.md};\n  }\n\n  h1 {\n    ${T.Heading1}\n\n    &:not(:first-child) {\n      margin-top: ${V.Space.lg};\n    }\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.default};\n    }\n  }\n\n  h2 {\n    ${T.Heading1}\n\n    &:not(:first-child) {\n      margin-top: ${V.Space.lg};\n    }\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.default};\n    }\n  }\n\n  h3 {\n    ${T.Heading2}\n\n    &:not(:first-child) {\n      margin-top: ${V.Space.md};\n    }\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.sm};\n    }\n  }\n\n  p {\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.default};\n    }\n  }\n\n  a {\n    ${T.Link}\n  }\n\n  blockquote {\n    ${T.Heading3}\n    border-left: ${V.Space.xxs} solid var(--highlightColor);\n    font-style: italic;\n    overflow-wrap: break-word;\n    padding-bottom:  ${V.Space.sm};\n    padding-left: ${V.Space.default};\n    padding-top:  ${V.Space.sm};\n\n    &:not(:first-child) {\n      margin-top: ${V.Space.lg};\n    }\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.lg};\n    }\n  }\n\n  ol {\n    list-style-type: decimal;\n  }\n\n  ul {\n    list-style-type: disc;\n  }\n\n  ol, ul {\n    padding-left: 2.5rem;\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.default};\n    }\n  }\n\n  li {\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.sm};\n    }\n  }\n\n  img,\n  .gatsby-resp-image-wrapper {\n    width: 100%;\n\n    & + em {\n      font-size: 1.4rem;\n    }\n  }\n\n  .gatsby-highlight {\n    pre[class*=\"language-\"] {\n      border-left: ${V.Space.xxs} solid var(--highlightColor);\n      font-size: 1.8rem;\n      padding-left: ${V.Space.default};\n\n      ${media.lessThan('medium')`\n        border-radius: 0;\n        font-size: 1.6rem;\n        margin-left: -${V.Space.sm};\n        margin-right: -${V.Space.sm};\n      `}\n    }\n\n    &:not(:last-child) {\n      margin-bottom: ${V.Space.default};\n    }\n  }\n\n  .language-text {\n    background-color: var(--bgSecondary);\n    color: var(--colorPrimary);\n    font-size: 1.8rem;\n    padding-bottom: .2em;\n    padding-left: .3em;\n    padding-right: .3em;\n    padding-top: .3em;\n    text-shadow: none;\n  }\n\n  hr {\n    background-color: var(--borderColor);\n    border: 0;\n    height: 1px;\n    margin-bottom: ${V.Space.default};\n    margin-top: ${V.Space.default};\n  }\n\n  .twitter-tweet {\n    ${T.Text2}\n\n    p {\n      ${T.Heading3}\n      border-bottom: ${V.Border.box};\n      font-style: normal;\n      margin-bottom: ${V.Space.sm};\n      padding-bottom: ${V.Space.sm};\n    }\n\n    a {\n      ${T.Text2}\n\n      &:before {\n        content: '';\n        display: block;\n      }\n    }\n  }\n\n  .support-title {\n    ${T.Subtitle1}\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as S from './styled'\n\nconst Content = ({ children }) => {\n  return (\n    <S.Content>{ children }</S.Content>\n  )\n}\n\nContent.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Content","import styled from 'styled-components'\n\nexport const GridTemplate = styled.section`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 65rem;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as S from './styled'\n\nconst GridTemplate = ({ children }) => {\n  return (\n    <S.GridTemplate>\n      {children}\n    </S.GridTemplate>\n  )\n}\n\nGridTemplate.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default GridTemplate\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\n\nimport { getActiveTheme } from 'utils/themes'\n\nimport Layout from 'components/Layout'\nimport Content from 'components/Content'\nimport GridTemplate from 'components/GridTemplate'\n\nconst trackProjectsClick = () => {\n  ReactGA.event({\n    category: '404',\n    action: 'click',\n    label: `404 - Go to Projects`,\n  })\n}\n\nconst NotFoundPage = () => {\n  return (\n    <Layout>\n      <GridTemplate>\n        <Content>\n          <h1>\n            There's nothing here...\n            <span className='small' role='img' aria-label='Scared emoji'>\n              😱\n            </span>\n          </h1>\n\n          <p className='support-title'>\n            But don't worry!\n            <span className='small' role='img' aria-label='Happy emoji'>\n              😄\n            </span>\n          </p>\n\n          <p>\n            In the meantime you can take a look at my{' '}\n            <AniLink\n              cover\n              bg={getActiveTheme()}\n              direction='down'\n              duration={1}\n              to='/Projects/'\n              onClick={() => trackProjectsClick()}\n            >\n              personal projects\n            </AniLink>\n            !{' '}\n            <span\n              className='small'\n              role='img'\n              aria-label='Passionate eyes emoji'\n            >\n              😍\n            </span>\n          </p>\n        </Content>\n      </GridTemplate>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n"],"sourceRoot":""}