{"version":3,"sources":["webpack:///./src/components/Projects/styled.js","webpack:///./src/components/Projects/index.js","webpack:///./src/pages/projects.js","webpack:///./src/components/BoxHandler/styled.js","webpack:///./src/components/BoxHandler/index.js","webpack:///./src/components/DateTime/styled.js","webpack:///./src/components/DateTime/index.js"],"names":["ProjectsList","styled","section","withConfig","displayName","componentId","V","default","ProjectsItem","a","attrs","props","href","title","target","rel","Image","Img","alt","Title","h1","T","sm","xxs","Text","p","trackClickProjects","item","ReactGA","event","category","action","label","ProjectsImg","_ref","imageSrc","images","useStaticQuery","image","edges","find","node","relativePath","React","createElement","S","fluid","childImageSharp","Projects","_ref2","content","map","_ref3","key","id","path","onClick","BoxHandler","DateTime","date","description","ProjectsPage","data","Layout","allProjectsJson","article","box","media","greaterThan","_templateObject","_taggedTemplateLiteralLoose","children","time"],"mappings":"mPAMO,MAAMA,EAAeC,IAAOC,QAAOC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAdJ,CAAc,gHAErBK,IAAQC,QACXD,IAAQC,SAIbC,EAAeP,IAAOQ,EAAEC,MAAMC,IAAK,CAC9CC,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,OAAQ,SACRC,IAAK,yBACJZ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBALyBJ,CAKzB,8CAKUe,EAAQf,YAAOgB,KAAKP,MAAMC,IAAK,CAC1CO,IAAKP,EAAME,SACVV,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAFkBJ,CAElB,qCAEgBK,IAAQC,SAGdY,EAAQlB,IAAOmB,GAAEjB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAATJ,CAAS,mFAC1BoB,IAGcf,IAAQgB,GAILhB,IAAQiB,KAIhBC,EAAOvB,IAAOwB,EAACtB,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAARJ,CAAQ,QACxBoB,KCjCEK,EAAsBC,IAC1BC,IAAQC,MAAM,CACZC,SAAU,WACVC,OAAQ,QACRC,MAAM,uBAAwBL,KAI5BM,EAAcC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/B,MAAM,OAAEE,GAAWC,yBAAe,aAoB5BC,EAAQF,EAAOG,MAAMC,KAAKF,GACvBA,EAAMG,KAAKC,eAAiBP,EAASO,cAG9C,OAAOC,IAAAC,cAACC,EAAO,CAACC,MAAOR,EAAMG,KAAKM,gBAAgBD,SA8BrCE,MA3BEC,IAAkB,IAAjB,QAAEC,GAASD,EAC3B,OACEN,IAAAC,cAACC,EAAc,KACZK,EAAQC,IAAIC,IAAe,IAAd,KAAEX,GAAMW,EACpB,OACET,IAAAC,cAACC,EAAc,CACbQ,IAAKZ,EAAKa,GACV1C,KAAM6B,EAAKc,KACX1C,MAAO4B,EAAK5B,MACZ2C,QAASA,IAAM9B,GACfiB,IAAAC,cAACa,IAAU,KACTd,IAAAC,cAACX,EAAW,CAACE,SAAUM,EAAKN,WAC5BQ,IAAAC,cAACc,IAAQ,KAAEjB,EAAKkB,MAChBhB,IAAAC,cAACC,EAAO,KAAEJ,EAAK5B,OACf8B,IAAAC,cAACC,EAAM,KAAEJ,EAAKmB,mBCzBbC,UAVMA,KACnB,MAAMC,EAAOzB,yBApBQ,cAsBrB,OACEM,IAAAC,cAACmB,IAAM,KACLpB,IAAAC,cAACI,EAAQ,CAACE,QAASY,EAAKE,gBAAgBzB,W,+GCzBvC,MAAMkB,EAAaxD,IAAOgE,QAAO9D,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAdJ,CAAc,skBAC5BK,IAAS4D,IACF5D,IAAe4D,IAClB5D,IAAY4D,IAKf5D,IAAQgB,GAIjB6C,IAAMC,YAAY,SAAlBD,CAA2BE,MAAAC,YAAA,8BAChBhE,IAAQC,SAWKD,IAAaC,SCd1BkD,IAVIvB,IAAmB,IAAlB,SAAEqC,GAAUrC,EAC9B,OACES,IAAAC,cAACC,EAAY,KAAE0B,K,mFCHZ,MAAMb,EAAWzD,IAAOuE,KAAIrE,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAXJ,CAAW,2HAOdK,IAAQiB,KCIdmC,IAVExB,IAAmB,IAAlB,SAAEqC,GAAUrC,EAC5B,OACES,IAAAC,cAACC,EAAU,KAAE0B","file":"component---src-pages-projects-js-d5482485357a2ead9a57.js","sourcesContent":["import styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport * as V from 'styles/variables'\nimport * as T from 'styles/typography'\n\nexport const ProjectsList = styled.section`\n  display: grid;\n  grid-column-gap: ${V.Space.default};\n  grid-row-gap: ${V.Space.default};\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n`\n\nexport const ProjectsItem = styled.a.attrs(props => ({\n  href: props.href,\n  title: props.title,\n  target: '_blank',\n  rel: 'noopener noreferrer'\n}))`\n  color: var(--primaryColor);\n  display: block;\n`\n\nexport const Image = styled(Img).attrs(props => ({\n  alt: props.title\n}))`\n  display: block;\n  margin-bottom: ${V.Space.default};\n`\n\nexport const Title = styled.h1`\n  ${T.Heading2}\n\n  &:not(:first-child) {\n    margin-top: ${V.Space.sm};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: ${V.Space.xxs};\n  }\n`\n\nexport const Text = styled.p`\n  ${T.Subtitle2}\n`\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport DateTime from 'components/DateTime'\nimport BoxHandler from 'components/BoxHandler'\n\nimport * as S from './styled'\n\nconst trackClickProjects = (item) => {\n  ReactGA.event({\n    category: 'Projects',\n    action: 'click',\n    label: `Projects - Going to ${item}`\n  })\n}\n\nconst ProjectsImg = ({ imageSrc }) => {\n  const { images } = useStaticQuery(\n    graphql`\n      query {\n        images: allFile(filter: { sourceInstanceName: { eq: \"Projects\" } }) {\n          edges {\n            node {\n              extension\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 300) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const image = images.edges.find(image => {\n    return image.node.relativePath === imageSrc.relativePath\n  })\n\n  return <S.Image fluid={image.node.childImageSharp.fluid} />\n}\n\nconst Projects = ({ content }) => {\n  return (\n    <S.ProjectsList>\n      {content.map(({ node }) => {\n        return (\n          <S.ProjectsItem \n            key={node.id} \n            href={node.path} \n            title={node.title} \n            onClick={() => trackClickProjects}>\n            <BoxHandler>\n              <ProjectsImg imageSrc={node.imageSrc} />\n              <DateTime>{node.date}</DateTime>\n              <S.Title>{node.title}</S.Title>\n              <S.Text>{node.description}</S.Text>\n            </BoxHandler>\n          </S.ProjectsItem>\n        )\n      })}\n    </S.ProjectsList>\n  )\n}\n\nProjects.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Projects\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\nimport Projects from 'components/Projects'\n\nconst ProjectsJsonQuery = graphql`\n  query {\n    allProjectsJson {\n      edges {\n        node {\n          id,\n          path\n          title\n          date\n          description\n          imageSrc {\n            relativePath\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ProjectsPage = () => {\n  const data = useStaticQuery(ProjectsJsonQuery)\n  \n  return (\n    <Layout>\n      <Projects content={data.allProjectsJson.edges} />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n","import styled from 'styled-components'\nimport media from 'styled-media-query'\n\nimport * as V from 'styles/variables'\n\nexport const BoxHandler = styled.article`\n  border: ${V.Border.box};\n  border-radius: ${V.BorderRadius.box};\n  box-shadow: ${V.BoxShadow.box};\n  color: var(--primaryColor);\n  display: block;\n  height: 100%;\n  min-height: 15rem;\n  padding: ${V.Space.sm};\n  position: relative;\n  will-change: border-color;\n\n  ${media.greaterThan('medium')`\n    padding: ${V.Space.default};\n  `}\n\n  &:after,\n  &:before {\n    bottom: 0;\n    content: '';\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition: transform ${V.Transition.default};\n  }\n\n  &:before {\n    border-left: 1px solid var(--highlightColor);\n    border-right: 1px solid var(--highlightColor);\n    transform: scaleY(0);\n  }\n\n  &:after {\n    border-bottom: 1px solid var(--highlightColor);\n    border-top: 1px solid var(--highlightColor);\n    transform: scaleX(0);\n  }\n\n  &:hover {\n    &:before {\n      transform: scaleY(1)\n    }\n\n    &:after {\n      transform: scaleX(1)\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as S from './styled'\n\nconst BoxHandler = ({ children }) => {\n  return (\n    <S.BoxHandler>{children}</S.BoxHandler>\n  )\n}\n\nBoxHandler.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default BoxHandler\n","import styled from 'styled-components'\n\nimport * as V from 'styles/variables'\n\nexport const DateTime = styled.time`\n  color: var(--secondaryColor);\n  display: block;\n  font-size: 1.2rem;\n  letter-spacing: .1rem;\n\n  &:not(:last-child) {\n    margin-bottom: ${V.Space.xxs};\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as S from './styled'\n\nconst DateTime = ({ children }) => {\n  return (\n    <S.DateTime>{children}</S.DateTime>\n  )\n}\n\nDateTime.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default DateTime\n"],"sourceRoot":""}